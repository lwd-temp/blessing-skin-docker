#!/bin/bash
set -e
PWD_FILE="/var/lib/blessing-skin-server/setup-password"
HTPASSWD_FILE="/opt/blessing-skin-server/setup_auth.htpasswd"
NGINX_CONF_SRC="/opt/blessing-skin-server/nginx-setup-auth.conf"
NGINX_CONF_TARGET="/etc/nginx/conf.d/bs/nginx-setup-auth.conf"
AUTH_USER="admin"
gen_password() {
	tr -dc A-Za-z0-9_ < /dev/urandom | head -c 8 | xargs
}
apply_password() {
	echo "$AUTH_USER:$(openssl passwd -apr1 "$(<$PWD_FILE)")" > $HTPASSWD_FILE
	ln -sf $NGINX_CONF_SRC $NGINX_CONF_TARGET
}
clear_password() {
	rm -f $NGINX_CONF_TARGET
	rm -f $HTPASSWD_FILE
	rm -f $PWD_FILE
}
case $1 in
	get)
		if [ ! -f $PWD_FILE ];then
			echo "No password has been set."
			exit 1
		fi
		cat $PWD_FILE
		;;
	generate)
		if [ -f $PWD_FILE ];then
			echo "Setup password already exists."
		else
			gen_password > $PWD_FILE
			apply_password
			echo "Setup password generated successfully."
		fi
		echo "The username is [$AUTH_USER], the password is [$(<$PWD_FILE)]."
		;;
	clear)
		clear_password
		;;
	*)
		echo "Usage: setup-password <command>
Manages the password which is used to access /setup.

Commands:
 get            print the current password
 generate       generate a new password if no password is set
 clear          clear the password, this will make /setup UNPROTECTED"
		exit
		;;
esac
